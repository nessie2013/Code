
public int Money = 100;

public Gameobject = Tank;

public Transform = StartPos;

public Gameobject = BasicBuildMenu;

public Text MoneyText;
private int Lives = 100;
public Text LivesText;

void Update()
{
	LivesText = "Lives: " + Lives
	MoneyText = "Money: " + Money;
}

void FixedUpdate()
{
    RaycastHit hit;

    if (Physics.Raycast(transform.position, -Vector3.up, out hit))
	{
		if(hit.gameObject.tag == "BuildSpot")
		{
			BasicBuildMenu.SetActive(true);
		}
		if(hit.gameobject.tag == "BaseTower")
		{
			SecondaryBuildMenu.SetActive(true);
		}
	}   
}

//BuildMenuScript

public Gameobject = TowerBase;
public Gameobject = BasicTower;

private PlayerScript ScriptForPlayer;

void Awake()
{
	ScriptForPlayer = GetComponent<TankScript> ();
}

(tower spot with child as build base and tower as child then have upgraded towers child of that tower)
void BuildTower()
{
	if(ScriptForPlayer.Money == 100)
	{
		TowerBase.SetActive(false);
		BasicTower.SetActive(True);
		ScriptForPlayer.Money -= 100;
	}
}

// Tank Script

public int Health;
public Gameobject Player;

void Update()
{
	(add velocity)
	if(Health <= 0)
	{
		Destroy(Gameobject);
		(other script money) += 10;
		(otherscript tanksleft) -= 1;
	}
}

void OnTriggerEnter(Collider col)
{
	if(col.gameobject.tag == "MapEnd")
	{
		Destroy(Gameobject);

		(others script lives) -= 1;
	}
	
	if(col.gameobject.tag == "Bullet")
	{
		Health -= 10;
		
		Destroy(col.Gameobject);
	}
}

//Tank Spawner

using.unity.UI;

public int Wave = 0;
private int TanksLeft;
public Text TankNumbers


void Update()
{
TankNummbers = "Tanks Left: " + TanksLeft;
}

void StartWave()
{
	if(TanksLeft == 0)
	{
		Wave += 1;
	}
}
